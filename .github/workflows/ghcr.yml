name: ci
on:
  pull_request:
  push:
    branches:
      - 'main'
    tags:
      - "v*"
  schedule:
    - cron: "0 0 * * *"

#using-an-action
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKER_IMAGE_NAME: ${{ github.repository }}
      PUSH: ${{ toJSON(github.event_name != 'pull_request') }}
    steps:
      # Setup Docker Environment
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache
          key: buildx|${{ secrets.CACHE_DATE }}|${{ runner.os }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta for public images
        if: ${{ fromJSON(env.PUSH) }}
        id: docker_meta_public
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ghcr.io/${{ env.DOCKER_IMAGE_NAME }}
          tag-edge: true
          tag-semver: |
            {{version}}
            {{major}}
            {{major}}.{{minor}}
      - name: Build and push Docker image
        if: ${{ fromJSON(env.PUSH) }}
        uses: docker/build-push-action@v6
        with:
          platforms: |
            linux/amd64
            linux/arm64
          load: false
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          labels: ${{ steps.docker_meta_public.outputs.labels }}
          tags: ${{ steps.docker_meta_public.outputs.tags }}